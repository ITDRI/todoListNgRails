{"version":3,"sources":["./src/app/shared/todos.service.ts","./src/app/components/projects/projects.component.ts","./src/environments/environment.ts","./src/app/components/create-todo-modal/create-todo-modal.component.ts","./src/app/shared/projects.service.ts","./src/app/components/create-todo-modal/create-todo-modal.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/shared/interfaces.ts","./src/app/components/projects/projects.component.html","./src/app/app.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import {HttpClient} from '@angular/common/http';\nimport {Injectable, Output} from '@angular/core';\nimport {Observable, Subject, throwError} from 'rxjs';\nimport {NewTodo, Todo} from './interfaces';\nimport {environment} from './../../environments/environment';\nimport {catchError} from 'rxjs/operators';\n\n@Injectable({providedIn: 'root'})\nexport class TodosService {\n\n  @Output() error$: Subject<string> = new Subject()\n  constructor (private http: HttpClient) { }\n\n  update(todo: Todo): Observable<Todo> {\n    return this.http.patch<Todo>(`${environment.dbUrl}/projects/${todo.project_id}/todo/${todo.id}`, todo)\n      .pipe(\n        catchError(error => {\n          this.error$.next(error.message)\n          return throwError(error)\n        }\n        )\n      )\n  }\n\n  create(newTodo: NewTodo): Observable<NewTodo> {\n    return this.http.post<NewTodo>(`${environment.dbUrl}/todo`, newTodo)\n      .pipe(\n        catchError(error => {\n          this.error$.next(error.message)\n          return throwError(error)\n        }\n        )\n      )\n  }\n}\n","import {Component, EventEmitter, Input, OnDestroy, Output} from '@angular/core';\nimport {plainToClass} from 'class-transformer';\nimport {Subscription} from 'rxjs';\nimport {Project, Todo, Todos} from './../../shared/interfaces';\nimport {TodosService} from './../../shared/todos.service';\n\n@Component({\n  selector: 'app-projects',\n  templateUrl: './projects.component.html',\n  styleUrls: ['./projects.component.scss']\n})\nexport class ProjectsComponent implements OnDestroy {\n  @Input()\n  project: Project\n  updateSub: Subscription\n\n  constructor (private TodosService: TodosService) { }\n\n  update(isCompleted: boolean, todo: Todo) {\n    const updTodo = plainToClass(Todos, todo)\n    updTodo.complete = isCompleted\n    this.updateSub = this.TodosService.update(updTodo).subscribe()\n  }\n\n  ngOnDestroy() {\n    if (this.updateSub) this.updateSub.unsubscribe()\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  dbUrl: 'http://localhost:8080'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import {ConditionalExpr} from '@angular/compiler';\nimport {Component, EventEmitter, Input, OnDestroy, OnInit, Output} from '@angular/core';\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\nimport {plainToClass} from 'class-transformer';\nimport {Subscription} from 'rxjs';\nimport {Projects, NewTodo} from './../../shared/interfaces';\nimport {TodosService} from './../../shared/todos.service';\n\n@Component({\n  selector: 'app-create-todo-modal',\n  templateUrl: './create-todo-modal.component.html',\n  styleUrls: ['./create-todo-modal.component.scss']\n})\nexport class CreateTodoModalComponent implements OnInit, OnDestroy {\n\n  @Input() projects: Projects[]\n  @Output() hideModal = new EventEmitter<void>()\n  @Output() onAddNewTodo = new EventEmitter<void>()\n  createTodoform: FormGroup\n  newTodo: NewTodo\n  showAdditionalField: boolean = false\n  createSub: Subscription\n  title = \"Новая задача\"\n\n  constructor (private todosService: TodosService) { }\n\n  ngOnInit(): void {\n    this.createTodoform = new FormGroup({\n      todoTextFormControl: new FormControl('', Validators.required),\n      projectIdFormControl: new FormControl('', Validators.required)\n    })\n  }\n\n  ngOnDestroy() {\n    if (this.createSub) this.createSub.unsubscribe()\n  }\n\n  addNewCategory(): void {\n    let projectId: number = this.createTodoform.get('projectIdFormControl').value\n    if (projectId < 0) {\n      this.showAdditionalField = true\n      this.createTodoform.addControl('projectTitleFormControl', new FormControl('', Validators.required))\n      this.createTodoform.get('projectTitleFormControl').reset()\n    } else {\n      this.showAdditionalField = false\n      this.createTodoform.removeControl('projectTitleFormControl')\n    }\n  }\n\n  submit(): void {\n    if (this.createTodoform.valid) {\n      this.newTodo = plainToClass(NewTodo,\n        {\n          text: this.createTodoform.value.todoTextFormControl,\n          project_id: this.createTodoform.value.projectIdFormControl,\n          project_title: this.createTodoform.value.projectTitleFormControl,\n        })\n      this.createSub = this.todosService.create(this.newTodo).subscribe(() => {\n        this.hideModal.emit()\n        this.onAddNewTodo.emit()\n      }, () => this.hideModal.emit()\n      )\n    }\n  }\n}\n","import {HttpClient, HttpErrorResponse} from '@angular/common/http';\nimport {Injectable, Output} from '@angular/core';\nimport {catchError, map} from 'rxjs/operators';\nimport {Projects} from './interfaces';\nimport {environment} from '../../environments/environment';\nimport {plainToClass} from 'class-transformer';\nimport {Observable, Subject, throwError} from 'rxjs';\n\n@Injectable({providedIn: 'root'})\nexport class ProjectsService {\n\n  @Output() error$: Subject<string> = new Subject()\n  constructor (private http: HttpClient) { }\n\n  getAll(): Observable<any> {\n    return this.http.get(`${environment.dbUrl}/projects`)\n      .pipe(\n        map((response: {[key: string]: any}) => {\n          return plainToClass(Projects, response)\n        }),\n        catchError(error => {\n          this.error$.next(error.message)\n          return throwError(error)\n        })\n      )\n  }\n}\n","<div class=\"overlay\" (click)=\"hideModal.emit()\"></div>\n\n<div class=\"modal-wrapper\">\n  <div class=\"modal_title\">{{title}}</div>\n  <form [formGroup]=\"createTodoform\" (ngSubmit)=\"submit()\">\n    <mat-form-field>\n      <mat-label>Название задачи</mat-label>\n      <input type=\"email\" matInput formControlName=\"todoTextFormControl\" placeholder=\"Название задачи...\">\n      <mat-error *ngIf=\"createTodoform.get('todoTextFormControl').hasError('required')\">\n        Пожалуйста введите <strong>название задачи</strong>\n      </mat-error>\n    </mat-form-field>\n\n    <mat-form-field>\n      <mat-label>Категория</mat-label>\n      <mat-select required formControlName=\"projectIdFormControl\" (selectionChange)=\"addNewCategory()\">\n        <mat-option>--</mat-option>\n        <mat-option *ngFor=\"let project of projects\" [value]=\"project.id\">{{project.title}}</mat-option>\n        <mat-option value=\"-1\">Создать новую категорию</mat-option>\n      </mat-select>\n      <mat-error *ngIf=\"createTodoform.get('projectIdFormControl').hasError('required')\">\n        Необходимо указать название категории для новой задачи\n      </mat-error>\n    </mat-form-field>\n\n    <mat-form-field *ngIf=\"showAdditionalField\">\n      <mat-label>Название новой категории</mat-label>\n      <input type=\"email\" matInput formControlName=\"projectTitleFormControl\" placeholder=\"Название новой категории...\">\n      <mat-error *ngIf=\"createTodoform.get('projectTitleFormControl').hasError('required')\">\n        Пожалуйста введите <strong>название новой категории</strong>\n      </mat-error>\n    </mat-form-field>\n\n    <fieldset>\n      <button mat-raised-button (click)=\" hideModal.emit()\" type=\"button\">Отмена</button>\n      <button mat-raised-button color=\"primary\" type=\"submit\" [disabled]=\"createTodoform.invalid\">OK</button>\n    </fieldset>\n  </form>\n</div>\n","import {Component, OnDestroy, OnInit} from '@angular/core';\nimport 'reflect-metadata';\nimport {ProjectsService} from './shared/projects.service';\nimport {Project} from './shared/interfaces';\nimport {Subscription} from 'rxjs';\nimport {TodosService} from './shared/todos.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit, OnDestroy {\n\n  title = 'Задачи';\n  projects: Project[] = []\n  projectsSub: Subscription\n  errorsSub: Subscription[] = []\n  error: string\n\n  constructor (\n    private projectsService: ProjectsService\n  ) { }\n\n  modal = false\n\n  ngOnInit(): void {\n    this.drawProjectList()\n    this.errorsHandle()\n  }\n\n  ngOnDestroy(): void {\n    if (this.projectsSub) this.projectsSub.unsubscribe()\n    if (this.errorsSub.length) {\n      this.errorsSub.forEach(e => e.unsubscribe())\n    }\n  }\n\n  drawProjectList(): void {\n    this.projectsSub = this.projectsService.getAll().subscribe(projects => {\n      this.projects = projects\n    })\n  }\n\n  errorsHandle() {\n\n    // this.errorsSub.push(error$.subscribe(err => this.error = err))\n\n  }\n}\n","import {BrowserModule} from '@angular/platform-browser';\nimport {NgModule} from '@angular/core';\n\nimport {AppComponent} from './app.component';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport {MatButtonModule} from '@angular/material/button';\nimport {HttpClientModule} from '@angular/common/http';\nimport {ProjectsComponent} from './components/projects/projects.component';\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\nimport {CreateTodoModalComponent} from './components/create-todo-modal/create-todo-modal.component';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatCardModule} from '@angular/material/card';\n\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ProjectsComponent,\n    CreateTodoModalComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    ReactiveFormsModule,\n    BrowserAnimationsModule,\n    MatToolbarModule,\n    MatIconModule,\n    MatCheckboxModule,\n    MatButtonModule,\n    HttpClientModule,\n    MatProgressBarModule,\n    MatInputModule,\n    MatSelectModule,\n    MatCardModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import {Type} from 'class-transformer';\nexport interface Todo {\n  id: number\n  text: string\n  isCompleted: boolean\n  project_id: number\n}\nexport interface Project {\n  id: number\n  title: string\n  todos: Todos[]\n}\nexport interface apiCreateTodo {\n  text: string\n  project_id: number\n  isCompleted: boolean\n  project_title?: string\n}\nexport class Projects implements Project {\n  id: number;\n  title: string;\n  @Type(() => Todos)\n  todos: Todos[];\n}\n\nexport class Todos implements Todo {\n  id: number\n  text: string\n  isCompleted: boolean\n  set complete(boo) {\n    this.isCompleted = boo\n  }\n\n  project_id: number\n  project_title?: string\n}\n\nexport class NewTodo implements apiCreateTodo {\n  text: string\n  project_id: number\n  get isCompleted(): boolean {\n    return false\n  }\n  project_title?: string\n}\n\n","<div class=\"project\">\n  <div class=\"project_title\">{{ project.title }}</div>\n  <form>\n    <mat-checkbox *ngFor=\"let todo of project.todos\"\n                  [checked]=\"todo.isCompleted\"\n                  (change)=\"update($event.checked, todo )\"\n                  color=\"primary\">{{todo.text}}\n    </mat-checkbox>\n  </form>\n</div>\n","<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n  <meta charset=\"UTF-8\">\n  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n  <title>TodoList</title>\n</head>\n\n<body>\n\n  <app-create-todo-modal *ngIf=\"modal\" [projects]=\"projects\"\n                         (onAddNewTodo)=\"drawProjectList()\"\n                         (hideModal)=\"modal = false\">\n  </app-create-todo-modal>\n\n  <mat-toolbar color=\"primary\">\n    <span class=\"toolbar_title\">{{title}}</span>\n    <span class=\"example-spacer\"></span>\n    <button mat-icon-button (click)=\"modal = true\">\n      <mat-icon>add</mat-icon>\n    </button>\n  </mat-toolbar>\n\n  <mat-card class=\"error\" *ngIf=\"error\">\n    <h1>При выполнении запроса произошла ошибка!</h1>\n    <p class=\"error_text\">{{error}}</p>\n  </mat-card>\n\n  <main *ngIf=\"projects.length > 0; else loading\">\n    <app-projects *ngFor=\"let project of projects\"\n                  [project]=\"project\"></app-projects>\n\n\n  </main>\n  <ng-template #loading>\n    <main>\n      <mat-progress-bar mode=\"indeterminate\" color=\"accent\"></mat-progress-bar>\n    </main>\n  </ng-template>\n\n\n\n\n\n</body>\n\n</html>\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}